
---------------------
file name ./output/Assem.md
---------------------

# Assem Assembly



## Namespaces

| Name | Summary |
|------|---------|
| [Test](./Assem/Test.md) |  |



---------------------
file name ./output/Assem/Test.md
---------------------

# Test Namespace

assembly: [Assem](../Assem.md)



```csharp
namespace Test;
```

## Classes

| Name | Summary |
|------|---------|
| [GenericClass\<T\>](./Test/GenericClass`1.md) | Genericクラスです。 |



---------------------
file name ./output/Assem/Test/GenericClass`1.md
---------------------

# GenericClass\<T\> Class

namespace: [Test](../Test.md)<br />
assembly: [Assem](../../Assem.md)

Genericクラスです。

```csharp
public class GenericClass<T> where T : new();
```

Inheritance: [object](https://docs.microsoft.com/ja-jp/dotnet/api/System.Object) > GenericClass<T>

## Methods

| Name | Summary |
|------|---------|
| [GenericMethod\<T1\>\(T\)](./GenericClass`1/GenericMethod.md) | T1です。 |
| [GenericMethod\<T1, T2, T3\>\(T\)](./GenericClass`1/GenericMethod.md) | T３つです。 |

## Type Parameters

__T__ : `new()`

Tの型です。



---------------------
file name ./output/Assem/Test/GenericClass`1/GenericMethod.md
---------------------

# GenericMethod Method

namespace: [Test](../../Test.md)<br />
assembly: [Assem](../../../Assem.md)

GenericMethodです。

## Overloads

| Name | Summary |
|------|---------|
| GenericMethod\<T1\>\(T\) | T1です。 |
| GenericMethod\<T1, T2, T3\>\(T\) | T３つです。 |

## GenericMethod\<T1\>\(T\)

T1です。

```csharp
public T GenericMethod<T1>(T arg);
```

### Type Parameters

__T1__ : `T`

型です

### Parameters

__arg__ : `T`

`T`

### Return Value

`T`

Tです

## GenericMethod\<T1, T2, T3\>\(T\)

T３つです。

```csharp
public T3 GenericMethod<T1 ,T2 ,T3>(T arg) where T3 : new();
```

### Type Parameters

__T1__



__T2__



__T3__ : `new()`



### Parameters

__arg__ : `T`



### Return Value

`T3`




